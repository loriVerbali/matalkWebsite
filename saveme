const [selectedQuestion, setSelectedQuestion] = useState<QuestionData | null>(
  null
);
const [showEmailForm, setShowEmailForm] = useState(false);
const [email, setEmail] = useState("");
const [isSubmitting, setIsSubmitting] = useState(false);
const [imagesLoaded, setImagesLoaded] = useState(0);
const [submitStatus, setSubmitStatus] = useState<{
  type: "success" | "error" | null;
  message: string;
}>({ type: null, message: "" });

const handleQuestionSelect = (questionData: QuestionData) => {
  setSelectedQuestion(questionData);
  setShowEmailForm(false);
  setImagesLoaded(0);
  setSubmitStatus({ type: null, message: "" });

  // Track question selection
  mixpanel.track("Taste of Matalk - Question Selected", {
    question: questionData.question,
    source: "taste-of-matalk-ai",
  });
};

const handleImageClick = (word: string) => {
  // Speak the word
  const utterance = new SpeechSynthesisUtterance(word);
  utterance.rate = 0.8;
  utterance.pitch = 1.1;
  speechSynthesis.speak(utterance);

  // Show email form
  setShowEmailForm(true);
  setSubmitStatus({ type: null, message: "" });

  // Track image click
  mixpanel.track("Taste of Matalk - Image Clicked", {
    word: word,
    source: "taste-of-matalk-ai",
  });
};

const handleEmailSubmit = async (e: React.FormEvent) => {
  e.preventDefault();
  if (!email.trim()) return;

  setIsSubmitting(true);
  setSubmitStatus({ type: null, message: "" });

  try {
    const requestBody = {
      email: email.trim(),
      source: "website",
    };

    console.log("Sending request to API:", requestBody);

    const response = await fetch(
      "https://matalkwebsitebe-production.up.railway.app/api/contact",
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(requestBody),
      }
    );

    console.log("Response status:", response.status);
    console.log(
      "Response headers:",
      Object.fromEntries(response.headers.entries())
    );

    const data = await response.json();
    console.log("Response data:", data);

    if (response.ok) {
      setSubmitStatus({
        type: "success",
        message: "Thank you! We'll be in touch soon.",
      });
      setEmail("");

      // Track successful contact submission
      mixpanel.track("Taste of Matalk - Contact Submitted", {
        email: email.trim(),
        source: "taste-of-matalk-ai",
        status: "success",
      });

      setTimeout(() => {
        setShowEmailForm(false);
        setSelectedQuestion(null);
        setSubmitStatus({ type: null, message: "" });
      }, 3000);
    } else {
      let errorMessage = "Something went wrong. Please try again.";

      if (response.status === 409) {
        errorMessage = "This email is already registered.";
      } else if (response.status === 429) {
        errorMessage = "Too many requests. Please try again later.";
      } else if (response.status === 400) {
        // Log the actual error response for debugging
        console.log("API Error Response:", data);
        errorMessage =
          data.message || data.error || "Please enter a valid email address.";
      }

      setSubmitStatus({
        type: "error",
        message: errorMessage,
      });

      // Track failed contact submission
      mixpanel.track("Taste of Matalk - Contact Failed", {
        email: email.trim(),
        source: "taste-of-matalk-ai",
        status: "error",
        error_code: response.status,
        error_message: errorMessage,
      });
    }
  } catch (error) {
    setSubmitStatus({
      type: "error",
      message: "Network error. Please check your connection and try again.",
    });

    // Track network error
    mixpanel.track("Taste of Matalk - Contact Network Error", {
      email: email.trim(),
      source: "taste-of-matalk-ai",
      status: "network_error",
    });
  } finally {
    setIsSubmitting(false);
  }
};
