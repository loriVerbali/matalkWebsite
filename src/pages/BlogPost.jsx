import React, { useState, useEffect } from "react";
import { Link, useNavigate, useParams } from "react-router-dom";
import { ArrowLeft } from "lucide-react";
import { Button } from "@/components/ui/button";
import { createPageUrl } from "@/components/utils";

export default function BlogPostPage() {
  const [post, setPost] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);
  const navigate = useNavigate();
  const { slug } = useParams();

  useEffect(() => {
    const loadPost = async () => {
      setIsLoading(true);
      try {
        if (!slug) {
          throw new Error("No post slug specified");
        }

        // Static fallback posts
        const staticPosts = [
          {
            id: "1",
            slug: "ai-natural-conversation",
            title: "Why Natural Conversation Matters—for Everyone Involved",
            excerpt:
              "When we think of communication, we often focus on the words. But the experience of the conversation—how it flows, feels, and unfolds—is just as important as the message itself.",
            content:
              "Natural conversation is more than exchanging information. It's how we build trust, feel understood, and connect with one another. And for those who rely on communication tools or support systems, creating a natural-feeling interaction can make all the difference—not just for them, but for the people they're speaking with.\n\n**The Subtle Art of Feeling Heard**\n\nWe all know what it's like to have a conversation that just clicks. The pauses are comfortable. The responses are timely. The tone is right. It feels effortless.\n\nNow contrast that with a conversation that's delayed, robotic, or disjointed. Even if the right words are spoken, something essential is missing: flow. That absence doesn't just frustrate the speaker—it affects the listener, too. It can cause confusion, discomfort, or even disengagement.\n\nIn short, when the experience of the conversation isn't natural, both people feel it.\n\n**Why It's a Two-Way Street**\n\nFor someone using a speech device or assistive communication tool, the burden of conversation is often heavier. Every response takes more time. Every pause feels longer. And unfortunately, the result can be unintended: the listener may lose interest, interrupt, or unconsciously treat the interaction as one-sided.\n\nBut here's the thing—natural-feeling conversations benefit both sides.\n\n• For the speaker, it builds confidence and reinforces that their message is being received as intended.\n\n• For the partner, it creates clarity, emotional connection, and a sense of genuine dialogue.\n\nWhen communication flows naturally, both people are more present. They listen better. They respond more authentically. It's no longer a transaction—it's a relationship.\n\n**Timing, Tone, and Trust**\n\nRecent research shows that the timing of responses is a key driver of emotional connection. A well-timed \"yes,\" \"I understand,\" or even a pause at the right moment can completely change how a conversation feels. These subtle cues signal engagement, respect, and empathy.\n\nSimilarly, tone—whether spoken, written, or generated by a device—conveys emotion. If the tone is off, the whole message can be misunderstood.\n\nThat's why the future of assistive communication isn't just about faster responses or smarter word prediction—it's about restoring these deeply human cues that make conversation feel real.\n\n**Everyone Deserves Natural**\n\nWhether someone speaks with their voice, their eyes, or a device—they deserve an experience that feels like a real conversation. And the people speaking with them deserve that, too.\n\nNatural communication builds relationships. It fosters belonging. It gives people—all people—the chance to connect, not just be heard.\n\nAs technology advances, we have an opportunity to close the gap between what someone wants to say and how it's received. Not by replacing the human connection—but by enhancing it.",
            cover_image: {
              url: "/assets/story.jpeg",
              alt: "Natural Conversation",
            },
          },
          {
            id: "2",
            slug: "the-quiet-genius",
            title: "The Quiet Genius: How AI is Quietly Rewriting Human Potential",
            excerpt:
              "What happens when machines begin to not just understand our words—but our needs, emotions, and intentions?",
            content:
              "Modern Augmentative and Alternative Communication (AAC) tools are empowering individuals to express themselves in ways that were previously impossible.\n\nThese technologies bridge the gap between thought and expression, providing new pathways for communication that adapt to each person's unique needs and preferences.\n\n**Impact Areas:**\n- Educational settings\n- Healthcare communication\n- Social interactions\n- Professional environments",
            cover_image: {
              url: "/assets/article.jpeg",
              alt: "The Quiet Genius",
            },
          },
        ];

        const foundPost = staticPosts.find(
          (p) => p.slug === slug || p.id === slug
        );

        if (!foundPost) {
          throw new Error("Post not found");
        }

        setPost(foundPost);
      } catch (error) {
        console.error("Error loading blog post:", error);
        setError(error.message);
      } finally {
        setIsLoading(false);
      }
    };

    loadPost();
  }, []);

  if (isLoading) {
    return (
      <div className="max-w-4xl mx-auto py-12 px-4">
        <div className="animate-pulse">
          <div className="h-8 bg-gray-200 rounded w-3/4 mb-4"></div>
          <div className="h-4 bg-gray-200 rounded w-1/2 mb-12"></div>
          <div className="h-64 bg-gray-200 rounded mb-8"></div>
          <div className="space-y-4">
            <div className="h-4 bg-gray-200 rounded"></div>
            <div className="h-4 bg-gray-200 rounded"></div>
            <div className="h-4 bg-gray-200 rounded w-3/4"></div>
          </div>
        </div>
      </div>
    );
  }

  if (error || !post) {
    return (
      <div className="max-w-4xl mx-auto py-12 px-4 text-center">
        <h1 className="text-2xl font-bold text-gray-800 mb-4">
          {error || "Post not found"}
        </h1>
        <p className="text-gray-600 mb-8">
          We couldn't find the article you're looking for.
        </p>
        <Button
          onClick={() => navigate(createPageUrl("Home"))}
          className="rounded-xl bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600 text-white"
        >
          <ArrowLeft className="w-4 h-4 mr-2" />
          Back to Home
        </Button>
      </div>
    );
  }

  return (
    <div className="bg-gradient-to-b from-purple-50 to-blue-50 min-h-screen py-12">
      <div className="max-w-4xl mx-auto px-4">
        <div className="mb-8">
          <Link
            to={createPageUrl("Home")}
            className="inline-flex items-center text-purple-600 hover:text-purple-700"
          >
            <ArrowLeft className="w-4 h-4 mr-2" />
            Back to Home
          </Link>
        </div>

        <div className="bg-white rounded-[20px] overflow-hidden shadow-[0_8px_30px_rgb(0,0,0,0.12)] mb-8">
          <div className="h-[300px] relative">
            <img
              src={post.cover_image?.url || post.image_url} // Support both new and old format
              alt={post.cover_image?.alt || post.title}
              className="w-full h-full object-cover"
            />
          </div>

          <div className="p-8">
            <h1 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
              {post.title}
            </h1>

            <div className="prose max-w-none">
              {post.content ? (
                post.content.split("\n").map((paragraph, idx) =>
                  paragraph.trim() ? (
                    <p key={idx} className="text-gray-700 mb-6">
                      {paragraph.split(/(\*\*.*?\*\*)/).map((part, partIdx) => {
                        if (part.startsWith("**") && part.endsWith("**")) {
                          return (
                            <strong key={partIdx}>{part.slice(2, -2)}</strong>
                          );
                        }
                        return part;
                      })}
                    </p>
                  ) : (
                    <br key={idx} />
                  )
                )
              ) : (
                <p className="text-gray-700 mb-6">{post.excerpt}</p>
              )}
            </div>
          </div>
        </div>

        <div className="text-center">
          <Button
            onClick={() => navigate(createPageUrl("Home"))}
            className="rounded-xl bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600 text-white font-semibold px-6 py-3 shadow-lg"
          >
            <ArrowLeft className="w-4 h-4 mr-2" />
            Back to Home
          </Button>
        </div>
      </div>
    </div>
  );
}
